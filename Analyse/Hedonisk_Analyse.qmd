---
title: "Masteroppgave"
author: 
  Kevin Ha
  Ola Andre Olofsson
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

# Setup Chunk

```{r setup_base}
library(readr)
library(tidyverse)
library(dplyr)
library(lubridate)
#library(zoo)
library(sf)
library(sp)
library(spdep)
library(tmap)
library(spatialreg)
#library(magrittr)
#library(measurements)
library(tibble)
library(ggcorrplot)
library(huxtable)
library(plm)
library(car)
library(lmtest)
library(magick)
options(paged.print = FALSE)
```

# Leser inn datasettene for analyse

```{r Innlesing av data}
Analyse <- suppressWarnings(read_csv("Datasett_Analyse.csv")) %>% 
  select(-...1)
Analyse_sf <- suppressWarnings(st_read("Datasett_Analyse_sf.gpkg"))
Analyse_Shape <- suppressWarnings(read_sf("Analyse_Shape.shp"))
```

```{r Navngir shp}
shp <- "Analyse_Shape.shp"
class(st_geometry(st_read(shp, quiet = TRUE, type = 3)))
```

```{r Gjør variabler numerisk}
Analyse_sf <- transform(Analyse_sf, EiendomAreal = as.numeric(EiendomAreal))
Analyse_sf <- transform(Analyse_sf, BRA.Bolig = as.numeric(BRA.Bolig))
Analyse_sf <- transform(Analyse_sf, BRA.Tot = as.numeric(BRA.Tot))
Analyse_sf <- transform(Analyse_sf, BebygdAreal = as.numeric(BebygdAreal))
Analyse_sf <- transform(Analyse_sf, Bruksareal.Enhet = as.numeric(Bruksareal.Enhet))
```

Analyse_sf <- suppressWarnings(st_read("Datasett_Analyse_sf.gpkg"))

```{r}
Bolig_sf <- suppressWarnings(st_read("Bolig_Inkludert_Bergen.gpkg"))
Bolig_Eksl_Bergen_sf <- suppressWarnings(st_read("Bolig_Ekskludert_Bergen.gpkg"))
Blokker_sf <- suppressWarnings(st_read("Blokker_Inkludert_Bergen.gpkg"))
Blokker_Eksl_Bergen_sf <- suppressWarnings(st_read("Blokker_Ekskludert_Bergen.gpkg"))
```

```{r}
Bolig_sf <- transform(Bolig_sf, EiendomAreal = as.numeric(EiendomAreal))
Bolig_sf <- transform(Bolig_sf, BebygdAreal = as.numeric(BebygdAreal))
Bolig_Eksl_Bergen_sf <- transform(Bolig_Eksl_Bergen_sf, EiendomAreal = as.numeric(EiendomAreal))
Bolig_Eksl_Bergen_sf <- transform(Bolig_Eksl_Bergen_sf, BebygdAreal = as.numeric(BebygdAreal))
Blokker_sf <- transform(Blokker_sf, EiendomAreal = as.numeric(EiendomAreal))
Blokker_sf <- transform(Blokker_sf, BebygdAreal = as.numeric(BebygdAreal))
Blokker_Eksl_Bergen_sf <- transform(Blokker_Eksl_Bergen_sf, EiendomAreal = as.numeric(EiendomAreal))
Blokker_Eksl_Bergen_sf <- transform(Blokker_Eksl_Bergen_sf, BebygdAreal = as.numeric(BebygdAreal))
```

```{r}
#Bolig <- read.csv("Bolig_Inkludert_Bergen.csv")
#Bolig_Eksl_Bergen <- read.csv("Bolig_Ekskludert_Bergen.csv")
#Blokker <- read.csv("Blokker_Inkludert_Bergen.csv")
#Blokker_Eksl_Bergen <- read.csv("Blokker_Ekskludert_Bergen.csv")
```

# Summary av datasettene

```{r Summary Analyse}
#summary(Analyse)
#summary(Analyse_sf)
```

# Lager vektmatriser

```{r KNN naboer}
#Kankje laga vektmatrisa på Analyse-datasettet. Må bli gjort på kart-datasettet "Analyse_sf"

#Analyse_mat_nb3 <- knearneigh(Analyse, k = 3)
#Analyse_nb3 <- knn2nb(Analyse_mat_nb3)
#Analyse_W3 <- nb2listw(Analyse_nb3, style = "W")
```

## Vektmatrise for Analyse_sf

### Tester Queen- og Rook

```{r Queen}
# queen.nb = poly2nb(Analyse_Shape)
```

```{r Queen list}
# queen.listw = nb2listw(queen.nb)
```

```{r Rook}
# rook.nb = poly2nb(Analyse_Shape, queen = FALSE)
```

```{r Rook list}
# rook.listw = nb2listw(rook.nb)
```

```{r List W}
# listw1 = queen.listw
```

### Tester K-nærmeste-naboer-metoden

Her bruker vi den k-nærmeste naboer-metoden, som baserer seg på avstanden mellom punktene. Queen- og Rook-kriteriene brukes for å definere naboer i polygondata. Queen-kriteriet sier at polygoner er naboer hvis de deler minst ett punkt (hjørne eller kant), mens Rook-kriteriet sier at polygoner er naboer hvis de deler minst en kant.

K-nærmeste naboer-metoden som brukes fremvoer fungerer for punktdata og definerer naboer basert på avstanden mellom punktene. For hver observasjon finner den k nærmeste naboene, der k er en forhåndsbestemt verdi (k = 3, k = 5 og k = 10).

#### Vektmatrise, K = 3

Oppretter romlige vektmatriser for k-nærmeste naboer med k = 3

```{r KNN 3}
Analyse_sf_mat_nb3 <- knearneigh(Analyse_sf, k = 3)
Analyse_sf_nb3 <- knn2nb(Analyse_sf_mat_nb3)
Analyse_sf_W3 <- nb2listw(Analyse_sf_nb3, style = "W")
```

#### Vektmatrise, K = 5

Oppretter romlige vektmatriser for k-nærmeste naboer med k = 5

```{r KNN 5}
Analyse_sf_mat_nb5 <- knearneigh(Analyse_sf, k = 5)
Analyse_sf_nb5 <- knn2nb(Analyse_sf_mat_nb5)
Analyse_sf_W5 <- nb2listw(Analyse_sf_nb5, style = "W")
```

#### Vektmatrise, K = 10

Oppretter romlige vektmatriser for k-nærmeste naboer med k = 10

```{r KNN 10}
Analyse_sf_mat_nb10 <- knearneigh(Analyse_sf, k = 10)
Analyse_sf_nb10 <- knn2nb(Analyse_sf_mat_nb10)
Analyse_sf_W10 <- nb2listw(Analyse_sf_nb10, style = "W")
```

# Kontroll av nabolagsmatrise - Kevin

```{r Nabomatrise}
# Funksjonen returnerer en matrise med indeksene til punktene som tilhører settet av de k nærmeste naboene til hverandre.

bergen <- st_read(("Analyse_Shape.shp"), quiet=TRUE)
coords <- st_centroid(st_geometry(bergen), of_largest_polygon=TRUE)
col.knn <- knearneigh(coords, k=3)
plot(st_geometry(bergen), border="grey")
plot(knn2nb(col.knn), coords, add=TRUE)
title(main="K naermeste naboer, k = 3")
```

Funksjonen returnerer en matrise med indeksene til punktene som tilhører settet av de k nærmeste naboene til hverandre.

```{r Nabomatrise med farger og punkt}
# Nå plotter vi punktene og naboene for et utvalg av punkter for å se om det ser ut som om de har riktig antall naboer (k = 10).
plot(st_geometry(Analyse_sf), pch = 19, cex = 0.5, col = "blue")

# Velg et punkt for å se naboene
point_index <- 1

# Plot de valgte pointsene og naboene
plot(Analyse_sf[point_index, ], col = "red", pch = 19, cex = 1.2, add = TRUE)
plot(Analyse_sf[names(Analyse_sf_nb10[[point_index]]), ], col = "green", pch = 19, cex = 10, add = TRUE)

# Legger til beskrivelse
legend("bottomright", legend = c("Points", "Selected point", "Naboer (k = 10)"),
       col = c("blue", "red", "green"), pch = 19, cex = 0.8)
```

## Norgeskart med våre salg - Kevin

```{r Norgeskart}
analyse_shape <- st_read("Analyse_Shape.shp")
norge <- st_read("norge.shp")

# Transformerer kartene til samme CRS
norge <- st_transform(norge, crs = st_crs(analyse_shape))

# Plotter  MultiPolygon-data
ggplot() + 
  geom_sf(data = norge) +
  theme_bw()

# Legger til point-data på toppen av MultiPolygon data
ggplot() + 
  geom_sf(data = norge) +
  geom_sf(data = analyse_shape, color = "red") +
  theme_bw()
```

# Morans I - Kevin

```{r Kevins Moran}
# Definer en variabel for romlig analyse
Pris <- Analyse_sf$P

# Beregn Global Moran's I for k = 3, k = 5 og k = 10
moran_3 <- moran.test(Pris, Analyse_sf_W3)
moran_5 <- moran.test(Pris, Analyse_sf_W5)
moran_10 <- moran.test(Pris, Analyse_sf_W10)

# Vis resultater
cat("Global Moran's I (k = 3):", moran_3$estimate, "\n")
cat("Global Moran's I (k = 5):", moran_5$estimate, "\n")
cat("Global Moran's I (k = 10):", moran_10$estimate, "\n")
```

Disse resultatene viser Global Moran's I-verdier for k = 3, k = 5 og k = 10. Global Moran's I er et mål på romlig autokorrelasjon som gir en indikasjon på hvordan en variabel (i dette tilfellet "Pris") er korrelert med seg selv i rommet. I dette tilfellet er variabelen "Pris" korrelert med sine nærmeste naboer.

Resultatene viser følgende: Global Moran's I (k = 3): 0.3930968 Global Moran's I (k = 5): 0.3361125 Global Moran's I (k = 10): 0.2473997 Global Moran's I-verdier varierer mellom -1 og 1:

Verdier nær 1 indikerer positiv romlig autokorrelasjon, der lignende verdier er gruppert sammen i rommet. Verdier nær -1 indikerer negativ romlig autokorrelasjon, der ulike verdier er gruppert sammen i rommet. Verdier nær 0 indikerer ingen romlig autokorrelasjon, der verdier er jevnt fordelt i rommet. I dette tilfellet er alle Global Moran's I-verdier positive, noe som tyder på positiv romlig autokorrelasjon. Det betyr at høyere priser har en tendens til å være nærmere hverandre, og lavere priser har en tendens til å være nærmere hverandre i rommet.

Det er viktig å merke seg at Moran's I-verdien avtar når antall naboer (k) øker. Dette kan skyldes at når flere naboer inkluderes i analysen, blir det mindre sannsynlig at hver enhet har naboer med lignende verdier.

Tallene etter Moran's I-verdiene i resultatene (-0.0003374958 og 0.0001646533 for k = 3, osv.) er konstantleddet og koeffisienten for x i Moran's I-beregningen. Disse tallene brukes for å beregne Moran's I-verdien og er ikke av stor interesse for tolkningen av resultatene.

# Korrelasjonsmatriser

## Sjekket for korrelasjon og multikollinearitet

Sjekk korrelasjon mellom - EiendomAreal - BRA.Bolig - BRA.Annet - BRA.Tot - BebygdAreal - Bruksareal.Enhet

```{r Korrelasjonsmatrise Eiendom}
cor_matrix <- cor(Analyse[c("EiendomAreal", "BRA.Bolig", "BRA.Annet", "BRA.Tot", "BebygdAreal", "Bruksareal.Enhet")])
print(cor_matrix)
```

```{r Visualisering av korrelasjonsmatrise}
ggcorrplot(cor_matrix)
```

## Sjekker multikollinearitet

```{r lager lineær modell1}
linear_model_1 <- lm(P ~ Alder + EL.Kar + O.Karak_num + BLEnergikWh + MatValg_num + AntEiendom + EiendomAreal + BRA.Bolig + Bruksareal.Enhet + Etasje + VannkantGL + VegkantGL + BebygdAreal + RegLBE + RegGrunnforur + RegKulturEiendom + RegGrunnerverv + TotBoliger + RegKulturByg + AntallRom + AntallBad + AntallWC + PrivatEid + HarHeis + VannKode + AvlopsKode + BolType + Kjokken + YearQuarter, data = Analyse)
```

```{r Sjekker multikollinearitet i lm1}
vif_values_1 <- vif(linear_model_1)
print(vif_values_1)
```

Vi ønsker GVIF verdier så nærme 1 som mulig. Verdier mindre enn 5 er akseptable, mens verdier over 5 må kastes. Med dette i bakhånd velger vi dermed å forkaste TotBoliger variablen. Dette kommer også av at vi er interessert i kjøp av boliger, så om det er 1 eller 10 boliger som blir solgt har ikkje så mykje å si for personen som kjøper boligen.

**GVIF-Verdier på 1.02 til 1.6. Dette er variabler vi kan bruke**

```{r lager lineær modell2}
linear_model_2 <- lm(P ~ EiendomAreal + dist_cbd_km, data = Analyse_sf)
```

```{r Sjekker multikollinearitet i lm2}
vif_values_2 <- vif(linear_model_2)
print(vif_values_2)
```

```{r lager lineær modell3}
linear_model_3 <- lm(P ~ BRA.Bolig + dist_cbd_km, data = Analyse_sf)
```

```{r Sjekker multikollinearitet i lm3}
vif_values_3 <- vif(linear_model_3)
print(vif_values_3)
```

```{r lager lineær modell4}
linear_model_4 <- lm(P ~ Bruksareal.Enhet + dist_cbd_km, data = Analyse_sf)
```

```{r Sjekker multikollinearitet i lm4}
vif_values_4 <- vif(linear_model_4)
print(vif_values_4)
```

En GVIF-verdi på mindre enn 5 regnes som akseptabelt for å unngå signifikant multikollinearitet. Her har BRA.Bolig og BebygdAreal en GVIF-verdi på henholdsvis 2.03 og 1.87, som indikerer at det ikke er noen signifikant multikollinearitet mellom dem. Bruksareal.Enhet har også en lav GVIF-verdi på 1.75, selv om antallet koeffisienter i modellen er høyt (220), som kan tyde på at det ikke er noen signifikant multikollinearitet mellom denne variabelen og de andre variablene i modellen. Dermed er det sannsynlig at disse variablene kan brukes sammen i en regresjonsmodell uten å påvirke modellens prediktive kraft eller nøyaktighet negativt på grunn av multikollinearitet.

```{r Fullstendig korrelasjonsmatrise }
cor_matrix_1 <- cor(Analyse[c("P", "Alder", "EL.Kar", "O.Karak_num", "BLEnergikWh", "MatValg_num", "AntEiendom", "EiendomAreal", "BRA.Bolig", "Bruksareal.Enhet", "Etasje", "VannkantGL", "VegkantGL", "BebygdAreal", "RegLBE", "RegGrunnforur", "RegKulturEiendom", "RegGrunnerverv", "TotBoliger", "RegKulturByg", "AntallRom", "AntallBad", "AntallWC", "PrivatEid", "HarHeis", "VannKode", "AvlopsKode")])
ggcorrplot(cor_matrix_1) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8.5)) +
  theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 8.5))
```

```{r Visualisering av fullstendig korrelasjonsmatrise}
#zoomi <- ggcorrplot(cor_matrix_1) +
#  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8.5)) +
#  theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 8.5))

# Save the ggcorrplot as a high-resolution image
#ggsave("zoomi.jpeg", zoomi, dpi = 500)
```

```{r Print av fullstendig korrelasjonsmatrise}
#cor_matrix_1 <- round(cor_matrix_1, 2)
#print(cor_matrix_1)
```

```{r Korrelasjonsmatrise rom}
cor_matrix_2 <- cor(Analyse[c("P", "AntallRom", "AntallBad", "AntallWC")])
ggcorrplot(cor_matrix_2)
```

```{r Korrelasjonsmatrise diverse}
cor_matrix_3 <- cor(Analyse[c("P", "Alder", "BLEnergikWh", "EL.Kar", "O.Karak_num", "MatValg_num")])
ggcorrplot(cor_matrix_3)
```

```{r Korrelasjonsmatrise areal og rom}
cor_matrix_4 <- cor(Analyse[c("P", "BRA.Bolig", "Bruksareal.Enhet", "AntallRom", "AntallBad", "AntallWC")])
ggcorrplot(cor_matrix_4)
```

```{r Korrelasjons mellom pris og distanse}
correlation <- cor(Analyse_sf$dist_cbd_km, Analyse$P, method = "pearson")
print(correlation)
```

```{r Korrelasjon i .sf-fil}
#cor_matrix <- cor(Analyse_sf[c("P", "EL.Kar", "Alder", "Etasje", "AntallRom")])
#ggcorrplot(cor_matrix, type = "lower", hc.order = TRUE, lab = TRUE)
```

# Lager modeller

### Variabelliste;

Alder - Y EL.Kar - Y O.Karak_num - Y BLEnergikWh - Y MatValg_num - Y AntEiendom - N EiendomAreal - Y BRA.Bolig - Y Bruksareal.Enhet - Y Etasje_num - Y VannkantGL - Y VegkantGL - Y BebygdAreal - Y RegLBE - Y RegGrunnforur - Y RegKulturEiendom - Y RegGrunnerverv - Y RegKulturByg - Y AntallRom - AntallBad - AntallWC - PrivatEid - HarHeis - VannKode - AvlopsKode - BolType - Kjokken - YearQuarter - dist_cbd_km -

-   

# Fellesgjeldproblematikken
```{r}
# Del datasettet i to grupper basert på eierform (selveier og borettslag)
selveier_data <- bergen[bergen$BolType != "Blokkleilighet", ]
borettslag_data <- bergen[bergen$BolType == "Blokkleilighet", ]

# Kjør separate regresjonsmodeller for hver av gruppene
selveier_modell <- lm(P ~ EL_Kr_O + Alder + O_Karak + BLEnrgW + MatValg, data = selveier_data)
borettslag_modell <- lm(P ~ EL_Kr_O + Alder + O_Karak + BLEnrgW + MatValg, data = borettslag_data)

# Skriv ut og sammenlign koeffisientene og deres konfidensintervaller for de to modellene
summary(selveier_modell)
confint(selveier_modell)

summary(borettslag_modell)
confint(borettslag_modell)

# Hvis du bestemmer deg for å inkludere borettslagsleilighetene i det totale utvalget, opprett en dummy-variabel for eierform og kjør en ny modell
bergen$eierform_dummy <- ifelse(bergen$BolType == "Blokkleilighet", 1, 0)
total_modell <- lm(P ~ EL_Kr_O + Alder + O_Karak + BLEnrgW + MatValg + eierform_dummy, data = bergen)
summary(total_modell)
```
Tolkning av resultater:
Justert R-kvadrat (Adjusted R-squared) er høyere for selveierboliger (0.1605) enn for borettslag (0.08644), noe som indikerer at modellen forklarer en større andel av variasjonen i prisen for selveierboliger sammenlignet med borettslag.

F-statistikken er høyere for selveierboliger (9.093) enn for borettslag (14.13), noe som indikerer at variablene i modellen for selveierboliger har en sterkere sammenheng med pris enn de tilsvarende variablene i modellen for borettslag.

For begge modellene er alder og BLEnrgW signifikante faktorer for pris. I selveierboliger øker prisen med 11,907 kr for hvert år eldre, mens den i borettslag øker med 7,229.7 kr. For BLEnrgW reduseres prisen med 6,190 kr per kWh i selveierboliger og 1,864.2 kr per kWh i borettslag.
Generelt sett viser sammenligningen at det er noen forskjeller i hvordan de forskjellige faktorene påvirker prisen på selveierboliger og borettslag.

# Regresjonsmodeller - Må fiksa YearQuarter

**OLA: Må fiksa YearQuarter te numerisk.**

## Blokker

### Modell 1

```{r Modell Blokk_1}
options(scipen = 999)

modBlokk1 <- "I(log(pm2+1)) ~ EL.Kar.Original"
OLSBlokk1 <- lm(modBlokk1, data = Blokker_sf)
summary(OLSBlokk1)
AIC(OLSBlokk1)
BIC(OLSBlokk1)
```

### Modell 2

```{r  Modell Blokk_2}
options(scipen = 999)

modBlokk2 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1))"
OLSBlokk2 <- lm(modBlokk2, data = Blokker_sf)
summary(OLSBlokk2)
AIC(OLSBlokk2)
BIC(OLSBlokk2)
```

### Modell 3

```{r Modell Blokk_3}
options(scipen = 999)

modBlokk3 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak"
OLSBlokk3 <- lm(modBlokk3, data = Blokker_sf)
summary(OLSBlokk3)
AIC(OLSBlokk3)
BIC(OLSBlokk3)
```

### Modell 4

**OLA: Eg TRUR da e log(BLEnergikWh), uten "+1" på slutten. Har sjekka og studert fjorårets master, korleis dei gjere da, og ser ut te at dei gjere da på lik metode.**

```{r Modell Blokk_4}
options(scipen = 999)

modBlokk4 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh))"
OLSBlokk4 <- lm(modBlokk4, data = Blokker_sf)
summary(OLSBlokk4)
AIC(OLSBlokk4)
BIC(OLSBlokk4)
```

### Modell 5

```{r Modell Blokk_5}
options(scipen = 999)

modBlokk5 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg"
OLSBlokk5 <- lm(modBlokk5, data = Blokker_sf)
summary(OLSBlokk5)
AIC(OLSBlokk5)
BIC(OLSBlokk5)
```

### Modell 6

```{r Modell Blokk_6}
options(scipen = 999)

modBlokk6 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1))"
OLSBlokk6 <- lm(modBlokk6, data = Blokker_sf)
summary(OLSBlokk6)
AIC(OLSBlokk6)
BIC(OLSBlokk6)
```

### Modell 7 (UTGÅR)

**OLA: Denna utgår. Sio me no har splitta da i 2, eit for leilighetar og eit for boligar, så e da ikkje relevant å bruka BRA.Bolig variabelen her.**

```{r}
#options(scipen = 999)

#mod7 <- "pm2 ~ EL.Kar.Original + Alder + O.Karak + BLEnergikWh + MatValg + EiendomAreal + BRA.Bolig"
#OLS7 <- lm(mod7, data = Blokker_sf)
#summary(OLS7)
#AIC(OLS7)
#BIC(OLS7)
```

### Modell 7 (FORTSETTELSE)

```{r Modell Blokk_7}
options(scipen = 999)

modBlokk7 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) +
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1))"
OLSBlokk7 <- lm(modBlokk7, data = Blokker_sf)
summary(OLSBlokk7)
AIC(OLSBlokk7)
BIC(OLSBlokk7)
```

### Modell 8

```{r Modell Blokk_8}
options(scipen = 999)

modBlokk8 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon"
OLSBlokk8 <- lm(modBlokk8, data = Blokker_sf)
summary(OLSBlokk8)
AIC(OLSBlokk8)
BIC(OLSBlokk8)
```

### Modell 9

```{r Modell Blokk_9}
options(scipen = 999)

modBlokk9 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL"
OLSBlokk9 <- lm(modBlokk9, data = Blokker_sf)
summary(OLSBlokk9)
AIC(OLSBlokk9)
BIC(OLSBlokk9)
```

### Modell 10

```{r Modell Blokk_10}
options(scipen = 999)

modBlokk10 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL"
OLSBlokk10 <- lm(modBlokk10, data = Blokker_sf)
summary(OLSBlokk10)
AIC(OLSBlokk10)
BIC(OLSBlokk10)
```

### Modell 11

```{r Modell Blokk_11}
options(scipen = 999)

modBlokk11 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1))"
OLSBlokk11 <- lm(modBlokk11, data = Blokker_sf)
summary(OLSBlokk11)
AIC(OLSBlokk11)
BIC(OLSBlokk11)
```

### Modell 12

```{r Modell Blokk_12}
options(scipen = 999)

modBlokk12 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE"
OLSBlokk12 <- lm(modBlokk12, data = Blokker_sf)
summary(OLSBlokk12)
AIC(OLSBlokk12)
BIC(OLSBlokk12)
```

### Modell 13

```{r Modell Blokk_13}
options(scipen = 999)

modBlokk13 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur"
OLSBlokk13 <- lm(modBlokk13, data = Blokker_sf)
summary(OLSBlokk13)
AIC(OLSBlokk13)
BIC(OLSBlokk13)
```

### Modell 14

```{r Modell Blokk_14}
options(scipen = 999)

modBlokk14 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom"
OLSBlokk14 <- lm(modBlokk14, data = Blokker_sf)
summary(OLSBlokk14)
AIC(OLSBlokk14)
BIC(OLSBlokk14)
```

### Modell 15

```{r Modell Blokk_15}
options(scipen = 999)

modBlokk15 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv"
OLSBlokk15 <- lm(modBlokk15, data = Blokker_sf)
summary(OLSBlokk15)
AIC(OLSBlokk15)
BIC(OLSBlokk15)
```

### Modell 16

```{r Modell Blokk_16}
options(scipen = 999)

modBlokk16 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg"
OLSBlokk16 <- lm(modBlokk16, data = Blokker_sf)
summary(OLSBlokk16)
AIC(OLSBlokk16)
BIC(OLSBlokk16)
```

### Modell 17

```{r Modell Blokk_17}
options(scipen = 999)
modBlokk17 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1))"
OLSBlokk17 <- lm(modBlokk17, data = Blokker_sf)
summary(OLSBlokk17)
AIC(OLSBlokk17)
BIC(OLSBlokk17)
```

### Modell 18

```{r Modell Blokk_18}
options(scipen = 999)
modBlokk18 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1))"
OLSBlokk18 <- lm(modBlokk18, data = Blokker_sf)
summary(OLSBlokk18)
AIC(OLSBlokk18)
BIC(OLSBlokk18)
```

### Modell 19

```{r Modell Blokk_19}
options(scipen = 999)
modBlokk19 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1))"
OLSBlokk19 <- lm(modBlokk19, data = Blokker_sf)
summary(OLSBlokk19)
AIC(OLSBlokk19)
BIC(OLSBlokk19)
```

### Modell 20

```{r Modell Blokk_20}
options(scipen = 999)
modBlokk20 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid"
OLSBlokk20 <- lm(modBlokk20, data = Blokker_sf)
summary(OLSBlokk20)
AIC(OLSBlokk20)
BIC(OLSBlokk20)
```

### Modell 21

```{r Modell Blokk_21}
options(scipen = 999)
modBlokk21 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis"
OLSBlokk21 <- lm(modBlokk21, data = Blokker_sf)
summary(OLSBlokk21)
AIC(OLSBlokk21)
BIC(OLSBlokk21)
```

### Modell 22

```{r Modell Blokk_22}
options(scipen = 999)
modBlokk22 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode"
OLSBlokk22 <- lm(modBlokk22, data = Blokker_sf)
summary(OLSBlokk22)
AIC(OLSBlokk22)
BIC(OLSBlokk22)
```

### Modell 23

```{r Modell Blokk_23}
options(scipen = 999)
modBlokk23 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode + 
  AvlopsKode"
OLSBlokk23 <- lm(modBlokk23, data = Blokker_sf)
summary(OLSBlokk23)
AIC(OLSBlokk23)
BIC(OLSBlokk23)
```

### Modell 24

```{r Modell Blokk_24}
options(scipen = 999)
modBlokk24 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode + 
  AvlopsKode + 
  BolType"
OLSBlokk24 <- lm(modBlokk24, data = Blokker_sf)
summary(OLSBlokk24)
AIC(OLSBlokk24)
BIC(OLSBlokk24)
```

### Modell 25

```{r Modell Blokk_25}
options(scipen = 999)
modBlokk25 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode + 
  AvlopsKode + 
  BolType + 
  Kjokken"
OLSBlokk25 <- lm(modBlokk25, data = Blokker_sf)
summary(OLSBlokk25)
AIC(OLSBlokk25)
BIC(OLSBlokk25)
```

### Modell 26

**OLA: Litt usikker på om YearQuarter variabelen e rekna som ein "dummy"-variabel eller ikkje. Så har foreløpig lagt den inn i I(log()) funksjon. Detta må avkreftast!**

```{r Modell Blokk_26}
options(scipen = 999)
modBlokk26 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode + 
  AvlopsKode + 
  BolType + 
  Kjokken + 
  I(log(YearQuarter))"
OLSBlokk26 <- lm(modBlokk26, data = Blokker_sf)
summary(OLSBlokk26)
AIC(OLSBlokk26)
BIC(OLSBlokk26)
```

### Modell 27

```{r Modell Blokk_27}
options(scipen = 999)
modBlokk27 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode + 
  AvlopsKode + 
  BolType + 
  Kjokken + 
  I(log(YearQuarter)) + 
  I(log(dist_cbd_km))"
OLSBlokk27 <- lm(modBlokk27, data = Blokker_sf)
summary(OLSBlokk27)
AIC(OLSBlokk27)
BIC(OLSBlokk27)
```

### Model for kun energirelaterte karakteristika

```{r Modell Blokk_Energi}
options(scipen = 999)

modBlokkEnergi <- "I(log(pm2+1)) ~ EL.Kar.Original + O.Karak + log(BLEnergikWh) + MatValg"
OLSBlokkEnergi <- lm(modBlokkEnergi, data = Blokker_sf)
summary(OLSBlokkEnergi)
AIC(OLSBlokkEnergi)
BIC(OLSBlokkEnergi)
```

## Boliger

### Modell 1

```{r Modell Bolig_1}
options(scipen = 999)

modBolig1 <- "I(log(pm2+1)) ~ EL.Kar.Original"
OLSBolig1 <- lm(modBolig1, data = Bolig_sf)
summary(OLSBolig1)
AIC(OLSBolig1)
BIC(OLSBolig1)
```

### Modell 2

```{r  Modell Bolig_2}
options(scipen = 999)

modBolig2 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1))"
OLSBolig2 <- lm(modBolig2, data = Bolig_sf)
summary(OLSBolig2)
AIC(OLSBolig2)
BIC(OLSBolig2)
```

### Modell 3

```{r Modell Bolig_3}
options(scipen = 999)

modBolig3 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak"
OLSBolig3 <- lm(modBolig3, data = Bolig_sf)
summary(OLSBolig3)
AIC(OLSBolig3)
BIC(OLSBolig3)
```

### Modell 4

**OLA: Eg TRUR da e log(BLEnergikWh), uten "+1" på slutten. Har sjekka og studert fjorårets master, korleis dei gjere da, og ser ut te at dei gjere da på lik metode.**

```{r Modell Bolig_4}
options(scipen = 999)

modBolig4 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh))"
OLSBolig4 <- lm(modBolig4, data = Bolig_sf)
summary(OLSBolig4)
AIC(OLSBolig4)
BIC(OLSBolig4)
```

### Modell 5

```{r Modell Bolig_5}
options(scipen = 999)

modBolig5 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg"
OLSBolig5 <- lm(modBolig5, data = Bolig_sf)
summary(OLSBolig5)
AIC(OLSBolig5)
BIC(OLSBolig5)
```

### Modell 6

```{r Modell Bolig_6}
options(scipen = 999)

modBolig6 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1))"
OLSBolig6 <- lm(modBolig6, data = Bolig_sf)
summary(OLSBolig6)
AIC(OLSBolig6)
BIC(OLSBolig6)
```

### Modell 7 (UTGÅR)

**OLA: Denna utgår. Sio me no har splitta da i 2, eit for leilighetar og eit for boligar, så e da ikkje relevant å bruka BRA.Bolig variabelen her.**

```{r}
#options(scipen = 999)

#mod7 <- "pm2 ~ EL.Kar.Original + Alder + O.Karak + BLEnergikWh + MatValg + EiendomAreal + BRA.Bolig"
#OLS7 <- lm(mod7, data = Blokker_sf)
#summary(OLS7)
#AIC(OLS7)
#BIC(OLS7)
```

### Modell 7 (FORTSETTELSE)

```{r Modell Bolig_7}
options(scipen = 999)

modBolig7 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) +
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1))"
OLSBolig7 <- lm(modBolig7, data = Bolig_sf)
summary(OLSBolig7)
AIC(OLSBolig7)
BIC(OLSBolig7)
```

### Modell 8

```{r Modell Bolig_8}
options(scipen = 999)

modBolig8 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon"
OLSBolig8 <- lm(modBolig8, data = Bolig_sf)
summary(OLSBolig8)
AIC(OLSBolig8)
BIC(OLSBolig8)
```

### Modell 9

```{r Modell Bolig_9}
options(scipen = 999)

modBolig9 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL"
OLSBolig9 <- lm(modBolig9, data = Bolig_sf)
summary(OLSBolig9)
AIC(OLSBolig9)
BIC(OLSBolig9)
```

### Modell 10

```{r Modell Bolig_10}
options(scipen = 999)

modBolig10 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL"
OLSBolig10 <- lm(modBolig10, data = Bolig_sf)
summary(OLSBolig10)
AIC(OLSBolig10)
BIC(OLSBolig10)
```

### Modell 11

```{r Modell Bolig_11}
options(scipen = 999)

modBolig11 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1))"
OLSBolig11 <- lm(modBolig11, data = Bolig_sf)
summary(OLSBolig11)
AIC(OLSBolig11)
BIC(OLSBolig11)
```

### Modell 12

```{r Modell Bolig_12}
options(scipen = 999)

modBolig12 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE"
OLSBolig12 <- lm(modBolig12, data = Bolig_sf)
summary(OLSBolig12)
AIC(OLSBolig12)
BIC(OLSBolig12)
```

### Modell 13

```{r Modell Bolig_13}
options(scipen = 999)

modBolig13 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur"
OLSBolig13 <- lm(modBolig13, data = Bolig_sf)
summary(OLSBolig13)
AIC(OLSBolig13)
BIC(OLSBolig13)
```

### Modell 14

```{r Modell Bolig_14}
options(scipen = 999)

modBolig14 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom"
OLSBolig14 <- lm(modBolig14, data = Bolig_sf)
summary(OLSBolig14)
AIC(OLSBolig14)
BIC(OLSBolig14)
```

### Modell 15

```{r Modell Bolig_15}
options(scipen = 999)

modBolig15 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv"
OLSBolig15 <- lm(modBolig15, data = Bolig_sf)
summary(OLSBolig15)
AIC(OLSBolig15)
BIC(OLSBolig15)
```

### Modell 16

```{r Modell Bolig_16}
options(scipen = 999)

modBolig16 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg"
OLSBolig16 <- lm(modBolig16, data = Bolig_sf)
summary(OLSBolig16)
AIC(OLSBolig16)
BIC(OLSBolig16)
```

### Modell 17

```{r Modell Bolig_17}
options(scipen = 999)
modBolig17 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1))"
OLSBolig17 <- lm(modBolig18, data = Bolig_sf)
summary(OLSBolig17)
AIC(OLSBolig17)
BIC(OLSBolig17)
```

### Modell 18

```{r Modell Bolig_18}
options(scipen = 999)
modBolig18 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1))"
OLSBolig18 <- lm(modBolig18, data = Bolig_sf)
summary(OLSBolig18)
AIC(OLSBolig18)
BIC(OLSBolig18)
```

### Modell 19

```{r Modell Bolig_19}
options(scipen = 999)
modBolig19 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1))"
OLSBolig19 <- lm(modBolig19, data = Bolig_sf)
summary(OLSBolig19)
AIC(OLSBolig19)
BIC(OLSBolig19)
```

### Modell 20

```{r Modell Bolig_20}
options(scipen = 999)
modBolig20 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid"
OLSBolig20 <- lm(modBolig20, data = Bolig_sf)
summary(OLSBolig20)
AIC(OLSBolig20)
BIC(OLSBolig20)
```

### Modell 21

```{r Modell Bolig_21}
options(scipen = 999)
modBolig21 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis"
OLSBolig21 <- lm(modBolig21, data = Bolig_sf)
summary(OLSBolig21)
AIC(OLSBolig21)
BIC(OLSBolig21)
```

### Modell 22

```{r Modell Bolig_22}
options(scipen = 999)
modBolig22 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode"
OLSBolig22 <- lm(modBolig22, data = Bolig_sf)
summary(OLSBolig22)
AIC(OLSBolig22)
BIC(OLSBolig22)
```

### Modell 23

```{r Modell Bolig_23}
options(scipen = 999)
modBolig23 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode + 
  AvlopsKode"
OLSBolig23 <- lm(modBolig23, data = Bolig_sf)
summary(OLSBolig23)
AIC(OLSBolig23)
BIC(OLSBolig23)
```

### Modell 24

```{r Modell Bolig_24}
options(scipen = 999)
modBolig24 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode + 
  AvlopsKode + 
  BolType"
OLSBolig24 <- lm(modBolig24, data = Bolig_sf)
summary(OLSBolig24)
AIC(OLSBolig24)
BIC(OLSBolig24)
```

### Modell 25

```{r Modell Bolig_25}
options(scipen = 999)
modBolig25 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode + 
  AvlopsKode + 
  BolType + 
  Kjokken"
OLSBolig25 <- lm(modBolig25, data = Bolig_sf)
summary(OLSBolig25)
AIC(OLSBolig25)
BIC(OLSBolig25)
```

### Modell 26

**OLA: Litt usikker på om YearQuarter variabelen e rekna som ein "dummy"-variabel eller ikkje. Så har foreløpig lagt den inn i I(log()) funksjon. Detta må avkreftast!**

```{r Modell Bolig_26}
options(scipen = 999)
modBolig26 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode + 
  AvlopsKode + 
  BolType + 
  Kjokken + 
  I(log(YearQuarter))"
OLSBolig26 <- lm(modBolig26, data = Bolig_sf)
summary(OLSBolig26)
AIC(OLSBolig26)
BIC(OLSBolig26)
```

### Modell 27

```{r Modell Bolig_27}
options(scipen = 999)
modBolig27 <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(EiendomAreal+1)) + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  VannKode + 
  AvlopsKode + 
  BolType + 
  Kjokken + 
  I(log(YearQuarter)) + 
  I(log(dist_cbd_km))"
OLSBolig27 <- lm(modBolig27, data = Bolig_sf)
summary(OLSBolig27)
AIC(OLSBolig27)
BIC(OLSBolig27)
```

### Model for kun energirelaterte karakteristika

```{r Modell Bolig_Energi}
options(scipen = 999)

modBoligEnergi <- "I(log(pm2+1)) ~ EL.Kar.Original + O.Karak + log(BLEnergikWh) + MatValg"
OLSBoligEnergi <- lm(modBoligEnergi, data = Bolig_sf)
summary(OLSBoligEnergi)
AIC(OLSBoligEnergi)
BIC(OLSBoligEnergi)
```


Modell som inkluderer Kommuner.

# Modell for BRA. Bolig og BRA.Tot individuelt

## BRA.Bolig

```{r Modell Bolig}
options(scipen = 999)

modBolig <- "P ~ BRA.Bolig"
OLSBolig <- lm(modBolig, data = Analyse_sf)
summary(OLSBolig)
AIC(OLSBolig)
BIC(OLSBolig)
```

## BRA.Tot

```{r Modell Tot}
options(scipen = 999)

modTOT <- "P ~ BRA.Tot"
OLSTOT <- lm(modTOT, data = Analyse_sf)
summary(OLSTOT)
AIC(OLSTOT)
BIC(OLSTOT)
```

## Bruksareal.Enhet

```{r Modell Boligenhet}
options(scipen = 999)

modEnhet <- "P ~ Bruksareal.Enhet"
OLSEnhet <- lm(modEnhet, data = Analyse_sf)
summary(OLSEnhet)
AIC(OLSEnhet)
BIC(OLSEnhet)
```

# Forslag til modeller for videre modellkjøring, litt utifra Liv's tilbakemeldinger (Midlertidig, Åpen for forslag/endring)

**OLA: Detta e eksludert kommune. Da tar eg etter me blir enig om finalisert modell**

## Forslag, Modell Blokker

```{r Modell Blokk_Forslag}
options(scipen = 999)
modBlokkForslag <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(Bruksareal.Enhet+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  HarHeis + 
  BolType + 
  Kjokken + 
  I(log(YearQuarter)) + 
  I(log(dist_cbd_km))"
OLSBlokkForslag <- lm(modBlokkForslag, data = Blokker_sf)
summary(OLSBlokkForslag)
AIC(OLSBlokkForslag)
BIC(OLSBlokkForslag)
```

## Forslag, Modell Boliger

```{r Modell Bolig_Forslag}
options(scipen = 999)
modBoligForslag <- "I(log(pm2+1)) ~ EL.Kar.Original + 
  I(log(Alder+1)) + 
  O.Karak + 
  I(log(BLEnergikWh)) + 
  MatValg + 
  I(log(BRA.Bolig+1)) + 
  EtasjeSeksjon + 
  VannkantGL + 
  VegkantGL + 
  I(log(BebygdAreal+1)) + 
  RegLBE + 
  RegGrunnforur + 
  RegKulturEiendom + 
  RegGrunnerverv + 
  RegKulturByg + 
  I(log(AntallRom+1)) + 
  I(log(AntallBad+1)) + 
  I(log(AntallWC+1)) + 
  PrivatEid + 
  Kjokken + 
  I(log(YearQuarter)) + 
  I(log(dist_cbd_km))"
OLSBoligForslag <- lm(modBoligForslag, data = Bolig_sf)
summary(OLSBoligForslag)
AIC(OLSBoligForslag)
BIC(OLSBoligForslag)
```

# Kjører OLS-Modellen på våres modeller

## OLS1

```{r OLS1}
#OLS1 = lm(mod1, data = Analyse_sf)
```

I OLS1 kan vi tolke; - *(Intercept)*: 2,872,115 er den estimerte gjennomsnittlige boligprisen når alle de uavhengige variablene er 0.

-   *EL.Kar*: For hver enhet økning i energikarakteren, øker den estimerte boligprisen med 34,119, gitt at de andre variablene holdes konstante.

-   *O.Karak_num*: For hver enhet økning i oppvarmingskarakteren, øker den estimerte boligprisen med 161,665, gitt at de andre variablene holdes konstante.

-   *MatValg_num*: For hver enhet økning i materialevalg for boligens konstruksjon, øker den estimerte boligprisen med 89,045, gitt at de andre variablene holdes konstante. Dette blir ikke helt riktig fordi en økning i materialevalg ikke gjenspeiler virkeligheten.

I dette tilfellet er p-verdiene for alle variablene statistisk signifikante på 0,05-nivå, noe som betyr at det er bevis for at disse variablene har en effekt på boligprisen. Den minst signifikante variabelen er EL.Kar (p-verdi = 0,0457), mens de andre variablene har p-verdier som er mye lavere enn 0,05.

Imidlertid er forklaringskraften i modellen ganske lav, noe som tyder på at det kan være andre faktorer som også påvirker boligprisene som ikke er inkludert i modellen.

```{r Summary OLS1}
#summary(OLS1)
```

```{r AIC OLS1}
#AIC(OLS1)
```

## OLS2

Punkt 2: Vi må finne ut kva variablar vi må ha "ln" framfor og kva variablar vi skal ha "I" framfor for å beholde formatering.

```{r OLS2}
#OLS2 = lm(mod2, data = Analyse_sf)
```

```{r Summary OLS2}
#options(scipen = 999)
#summary(OLS2)
```

```{r AIC OLS2}
#AIC(OLS2)
```

## OLS3

Punkt 2: Vi må finne ut kva variablar vi må ha "ln" framfor og kva variablar vi skal ha "I" framfor for å beholde formatering.

```{r OLS3}
#OLS3 = lm(mod3, data = Analyse_sf)
```

```{r Summary OLS3}
#options(scipen = 999)
#summary(OLS3)
```

```{r AIC OLS3}
#AIC(OLS3)
```

## OLS4

```{r OLS4}
#options(scipen = 999)
#OLS4 = lm(mod4, data = Analyse_sf)
#summary(OLS4)
```

```{r AIC OLS4}
#AIC(OLS4)
```

## OLS5 - Kevin

```{r OLS5}
#OLS5 = lm(mod5, data = Analyse_sf)
# summary(OLS5)
```

# HuxReg av OLS-modeller

```{r huxreg}
#Ekje heilt oppe å går endo. Jobbe med da.

#huxreg("OLS1" = OLS1, "OLS2" = OLS2, "OLS3" = OLS3,
#       coefs = c("(Intercept)", "EL.Kar", "O.Karak_num", "MatValg_num"), #Lagt til filter på enkelte variabler
#       error_format = "[{statistic}]",
#       note = "{stars}. T statistic in brackets.")
```

I huxreg ser vi følgende; Resultatene for *OLS2* og *OLS3* viser svært høye R-kvadrat-verdier på 0,92, noe som tyder på at modellene forklarer 92% av variasjonen i boligprisene. Imidlertid er det verdt å merke seg at koeffisientene for de uavhengige variablene i disse modellene ikke er statistisk signifikante (p-verdiene \> 0,05). Dette betyr at vi ikke kan konkludere med at de uavhengige variablene har en signifikant effekt på boligprisene i disse modellene. - OLS2 og OLS3 har høyere *logLik*-verdier enn OLS1, noe som indikerer at de passer bedre til dataene. -OLS2 og OLS3 har lavere *AIC*-verdier enn OLS1, noe som tyder på at de gir en bedre balanse mellom tilpasning og kompleksitet.

# Moran's Test

## Moran's - OLS1

```{r Morans test OLS1}
lm.morantest(OLS1, Analyse_sf_W3)
lm.morantest(OLS1, Analyse_sf_W5)
lm.morantest(OLS1, Analyse_sf_W10)
```

For alle tre romlige vektmatrisene (k = 3, 5, 10) viser Moran's I-test betydelig romlig autokorrelasjon i residualene til OLS-modellen: *k = 3: Observed Moran I = 0.376, p-verdi \< 2.2e-16* *k = 5: Observed Moran I = 0.325, p-verdi \< 2.2e-16* *k = 10: Observed Moran I = 0.242, p-verdi \< 2.2e-16* Dette indikerer at det er romlige mønstre i modellens feil som ikke er fanget av de uavhengige variablene, og en romlig regresjonsmodell bør vurderes.

## Moran's - OLS2

```{r Morans test OLS2}
lm.morantest(OLS2, Analyse_sf_W3)
lm.morantest(OLS2, Analyse_sf_W5)
lm.morantest(OLS2, Analyse_sf_W10)
```

For alle tre romlige vektmatrisene (k = 3, 5, 10) viser Moran's I-test for OLS2-modellen: *k = 3: Observed Moran I = -0.165, p-verdi = 0.9947* *k = 5: Observed Moran I = -0.122, p-verdi = 0.9898* *k = 10: Observed Moran I = -0.080, p-verdi = 1.0* I motsetning til OLS1, viser disse resultatene at det ikke er betydelig romlig autokorrelasjon i residualene til OLS2-modellen for de valgte romlige vektmatrisene. Dette indikerer at modellen fanger romlige mønstre i dataene bedre enn OLS1, og at en romlig regresjonsmodell kanskje ikke er nødvendig i dette tilfellet.

## Moran's - OLS3

```{r Morans test OLS3}
lm.morantest(OLS3, Analyse_sf_W3)
lm.morantest(OLS3, Analyse_sf_W5)
lm.morantest(OLS3, Analyse_sf_W10)
```

*k = 3: Observed Moran I = -0.1653628, p-verdi = 0.9947* *k = 5: Observed Moran I = -0.1223350, p-verdi = 0.9947* *k = 10: Observed Moran I = -0.08005172, p-verdi = 0.9947* Alle p-verdiene er større enn 0.05, som indikerer at det ikke er statistisk signifikant romlig autokorrelasjon i modellen. De negative verdiene for Observed Moran I indikerer imidlertid en viss grad av romlig heterogenitet i modellen. Modellen har lavere romlig autokorrelasjon når vi øker antallet naboer fra 3 til 10. \## Moran's - OLS4

## Moran's - OLS4

```{r Morans test OLS4}
lm.morantest(OLS4, Analyse_sf_W3)
lm.morantest(OLS4, Analyse_sf_W5)
lm.morantest(OLS4, Analyse_sf_W10)
```

Her får vi 0.3864, 0.3309, og 0.2435 for k=3, k=5, og k=10, med p-verdier som er mindre enn 0,05-nivået. Dette indikerer at det er en romlig avhengighet mellom residualene, og at det er romlig autokorrelasjon i dataene. Dette betyr at det er en tendens til at boliger som ligger nær hverandre, har lignende residualer, og at det kan være en romlig struktur i dataene som ikke tas hensyn til i modellen.

## Moran's - OLS5

```{r Morans test OLS5}
lm.morantest(OLS5, Analyse_sf_W3)
lm.morantest(OLS5, Analyse_sf_W5)
lm.morantest(OLS5, Analyse_sf_W10)
```

# Kevins romlige modeller

Denne første chunken feiler, men vil beholde den i dokumentet for eventuell inspirasjon. Kanskje vi klarer å fikse den

```{r Kevins modell}
# Konverter Analyse_sf til en pdata.frame for romlig regresjon
# analyse_sf_pdata <- pdata.frame(Analyse_sf)

# Definer modellformel
# Kev_model <- "P ~ Alder + EL.Kar + Bruksareal.Enhet + dist_cbd_km"

# Utfør romlig regresjon (lagmodell) for k = 3, k = 5 og k = 10
# lag_model_3 <- lagsarlm(Kev_model, data = Analyse_sf, listw = Analyse_sf_W3)
# lag_model_5 <- lagsarlm(Kev_model, data = Analyse_sf, listw = Analyse_sf_W5)
# lag_model_10 <- lagsarlm(Kev_model, data = Analyse_sf, listw = Analyse_sf_W10)

# Vis resultater fra modellene
# summary(lag_model_3)
# summary(lag_model_5)
# summary(lag_model_10)
```

Før vi kan kjøre de romlige modellene, må vi sjekke for multikollinearitet.

```{r}
linear_model <- lm(P ~ Alder + EL.Kar + O.Karak_num + BLEnergikWh + MatValg_num + AntEiendom + EiendomAreal + Etasje + dist_cbd_km,
                   data = Analyse_sf)
```

```{r}
vif_values <- vif(linear_model)
print(vif_values)
```

## SAR (Spatial Autoregressiv)

```{r}
# sar_model <- lagsarlm(P ~ Alder + EL.Kar + O.Karak_num + BLEnergikWh + MatValg_num + AntEiendom + EiendomAreal + Etasje_num + dist_cbd_km, data = Analyse_sf, listw = Analyse_sf_W3, zero.policy = TRUE)

# SAR model med høyere tol.solve-verdi og færre variabler
sar_model <- lagsarlm(P ~ O.Karak_num + BLEnergikWh + MatValg_num + AntEiendom + EiendomAreal + Etasje + dist_cbd_km,
                      data = Analyse_sf,
                      listw = Analyse_sf_W3,
                      tol.solve = 1e-10)
```

## SEM (Spatial Error Model)

```{r}
sem_model <- errorsarlm(P ~ Alder + EL.Kar + O.Karak_num + BLEnergikWh + MatValg_num + AntEiendom + EiendomAreal + Etasje + dist_cbd_km, data = Analyse_sf, listw = Analyse_sf_W3, zero.policy = TRUE)
```

## SAC (Spatial Simultaneous Autoregressiv)

```{r}
sac_model <- sacsarlm(P ~ Alder + EL.Kar + O.Karak_num + BLEnergikWh + MatValg_num + AntEiendom + EiendomAreal + Etasje + dist_cbd_km, data = Analyse_sf, listw = Analyse_sf_W3, zero.policy = TRUE)
```

## SDM (Spatial Dubin Model)

```{r}
# Lager romlige laggede uavhengige variabler
X_lag <- lag.listw(Analyse_sf_W3, as.matrix(Analyse_sf[, c("Alder", "EL.Kar", "O.Karak_num", "BLEnergikWh", "MatValg_num", "AntEiendom", "EiendomAreal", "BRA.Bolig", "Etasje", "dist_cbd_km")]))

# Legger til romlige laggede uavhengige variabler i mitt datasett
Analyse_sf <- cbind(Analyse_sf, X_lag)
names(Analyse_sf)[(ncol(Analyse_sf) - ncol(X_lag) + 1):ncol(Analyse_sf)] <- paste0("W_", names(X_lag))

# Formulerer Spatial Durbin model med lagsarlm() med type = "mixed"
durbin_model <- lagsarlm(P ~ Alder + EL.Kar + O.Karak_num + BLEnergikWh + MatValg_num + AntEiendom + EiendomAreal + BRA.Bolig + Etasje + dist_cbd_km + Alder + EL.Kar + O.Karak_num + BLEnergikWh + MatValg_num + AntEiendom + EiendomAreal + BRA.Bolig + Etasje + dist_cbd_km, data = Analyse_sf, listw = Analyse_sf_W3, type = "mixed")
summary(durbin_model)

```

# Resultater (SAR/SEM/SAC/SDM)

```{r}
cat("Summary for SAR model:\n")
print(summary(sar_model))

cat("\nSummary for SEM model:\n")
print(summary(sem_model))

cat("\nSummary for SAC model:\n")
print(summary(sac_model))

cat("\nSummary for Spatial Durbin model:\n")
print(summary(durbin_model))
```

```{r}
# Sammenligner SAR model med SEM model
lrtest_sar_vs_sem <- lrtest(sar_model, sem_model)
cat("\nLR test for SAR vs. SEM:\n")
print(lrtest_sar_vs_sem)

# Sammenligner SAR model med SAC model
lrtest_sar_vs_sac <- lrtest(sar_model, sac_model)
cat("\nLR test for SAR vs. SAC:\n")
print(lrtest_sar_vs_sac)

# Sammenligner SAR model med Spatial Durbin model
lrtest_sar_vs_durbin <- lrtest(sar_model, durbin_model)
cat("\nLR test for SAR vs. Spatial Durbin:\n")
print(lrtest_sar_vs_durbin)

# Sammenligner SEM model med SAC model
lrtest_sem_vs_sac <- lrtest(sem_model, sac_model)
cat("\nLR test for SEM vs. SAC:\n")
print(lrtest_sem_vs_sac)

# Sammenligner SEM model med Spatial Durbin model
lrtest_sem_vs_durbin <- lrtest(sem_model, durbin_model)
cat("\nLR test for SEM vs. Spatial Durbin:\n")
print(lrtest_sem_vs_durbin)

# Sammenligner SAC model med Spatial Durbin model
lrtest_sac_vs_durbin <- lrtest(sac_model, durbin_model)
cat("\nLR test for SAC vs. Spatial Durbin:\n")
print(lrtest_sac_vs_durbin)
```

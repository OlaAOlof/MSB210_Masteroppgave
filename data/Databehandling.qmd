---
title: "Masteroppgave"
author: "Kevin Ha, Ola Andre Olofsson"
format: html
editor: visual
project:
  execute-dir: file
---

```{r}
# top folder in project is root
getwd()
```

```{r}
#| output: false
#| label: setup
library(readxl)
library(tidyverse)
library(lubridate)
library(sf)
library(here)
# options(paged.print = FALSE)
```

Har noe tull med at RStudio ikke vil sette working directory til mappen hvor dokumentet ligger for evaluate chunk, men gjør det for render.
Må derfor ty til here::here

# Databehandling - Rådata, ENOVA

::: callout-note
Merk at jeg lengre ned i dokumentet har lagt inn eval: false i flere chunck-er
:::

## Lager datasett av Excel fra ENOVA

```{r}
# Kevin: Lagt inn suppressWarnings() for å slippe masse spam/warnings
# Hvorfor ikke heller gjøre som står i message.
# set `show_col_types = FALSE` to quiet this message
ev_10_18 <- paste("data/Energikarakterer_", 2010:2018, sep = "")
ev_19_22 <- paste("data/Energikarakterer_", 2019:2022, sep = "")

Energi_Vestland <- NULL
trobbel <- NULL

# Det er noen parse problemer for noen av filene, relaterer
for (i in ev_10_18) {
  fn = paste0(i, ".csv")
  data =  read_csv(
    file = here::here(fn),
    show_col_types = FALSE
    ) 
# parse problemer legges i trobbel
# Dere må bestemme hva dere vil gjøre med disse observasjoene
# Ser ut til å være feilregistrering av noen opplysninger
trobbel <- rbind(trobbel, problems(data))
Energi_Vestland = rbind(Energi_Vestland, data)
}

# For disse mangler Fnr (feste nummer). Generer variabelen og 
# fyller den med NA
for (i in ev_19_22) {
  p = paste0(i, ".xlsx")
  data =  read_excel(
    path = here::here(p),
  ) |> 
    mutate(
      Fnr = NA,
      .before = Andelsnummer
    )
Energi_Vestland = rbind(Energi_Vestland, data)
}
```

```{r}
# tibbel som inneholder alle problemene fra *.csv filene. Disse feilene bør 
# dere rydde opp i
trobbel
```

```{r}
# Filnavnene
trobbel[,c(5)]
```

```{r}
# Definerer studieområdet
v_land <- c(4601, 4623, 4624, 4626, 4627, 4628, 4630, 4631, 4632)
```

```{r}
ENOVA_Vestland <- Energi_Vestland |> 
  # Plukker ut verdiene i studieområde
  filter(Knr %in% v_land) |> 
  select(
    -EnergiVurderingDato,
    -BeregnetFossilandel,
    -Attestnummer,
    -HarEnergiVurdering
    )
```

## Sammenslår datasett, fom. 2019 tom. 2022

## Fjerner rekker observasjoner med organisasjonsnummer

Vi velger å fjerne rekkene med organisasjonsnummer da dette er boliger eid og kjøpt av næringer.
Vi er i denne oppgaven interesert i hvordan det i hovedsak påvirker private, og boliger med organisasjonsnummer blir dermed en verdi vi ikke har behov for.

```{r}
# Dropper obs. med org. nr
ENOVA_Vestland <- ENOVA_Vestland %>%
  filter(is.na(Organisasjonsnummer))
```

## Fjerner nå kolonnen for organisasjonsnummer

```{r}
# Dropper variablene Organisasjonsnummer og Poststed
ENOVA_Vestland <- ENOVA_Vestland %>% 
  select(-Organisasjonsnummer, -Poststed) |> 
  mutate(
    Utstedelsesdato = as_date(Utstedelsesdato)
  )
```

```{r}
#| eval: false
# Splitter matrikkel-nummer opp i sine enkelte komponenter 
# Slår sammen til matrikkelnummer!!!
# Hvorfor gjør dere dette???
# Vanskeligere å matche!!
# ENOVA_Vestland <- ENOVA_Vestland %>%
#   unite(col = "Matrikkelnummer", c("Knr", "Gnr", "Bnr", "Andelsnummer"), sep = "/", remove = FALSE) %>% 
#    select(-Knr, -Gnr, -Bnr, -Andelsnummer)
```

# Databehandling - Rådata, Eiendomsverdi AS

```{r}
# Hvorfor _kommaseparert på en .xlsx fil?????
EV <- read_excel(here::here("data/EV_kommaseparert.xlsx")) %>% 
  select(-CityDistrict)
```

# Boligkoordinater

## Leser inn filen for boligkoordinater

```{r}
KoordinaterVestland <- read_delim(
  file = here::here("data/KoordinaterVestland.csv"), 
  delim = ";", 
  escape_double = FALSE, 
  col_types = cols(
    Knr = col_character(), 
    Gnr = col_character(), 
    Bnr = col_character(), 
    Fnr = col_character(),
    Andelsnummer = col_character(),
    `EPSG-kode` = col_integer(), 
    Nord = col_double(),
    Ost = col_double()
    ), 
  trim_ws = TRUE
  )
# 
# 
# KoordinaterVestland <- read_delim("KoordinaterVestland.csv", 
#     delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE)
```

## Filterer ut relevante kommuner

```{r}
KoordinaterVestland <- KoordinaterVestland[KoordinaterVestland$Knr %in% v_land,]
```

## Slår sammen på koordinater for boliger med ENOVA_Vestland

```{r}
#| eval: false
# Vil beholde "Knr", "Gnr", "Bnr" etc. for lettere å matche
# data i KoordinaterVestland med info. om hvilke som
# har Enova tiltak
# KoordinaterVestland <- KoordinaterVestland %>%
#   unite(col = "Matrikkelnummer", c("Knr", "Gnr", "Bnr", "Andelsnummer"), sep = "/", remove = FALSE) %>% 
# select(-Knr, -Gnr, -Bnr, -Andelsnummer)
```

```{r}
# merged_data <- inner_join(ENOVA_Vestland, KoordinaterVestland, by = "Matrikkelnummer")
#  jeg ville gjort
merged_data <- left_join(
  ENOVA_Vestland, 
  KoordinaterVestland,
  # Ser ut som om Andeler er registrert med forskjellige koordinater
  by = c("Knr", "Gnr", "Bnr", "Fnr", "Andelsnummer")
)
```

```{r}
# x = longitude (ost), y = latitude (nord)
merged_data_sf <- merged_data |> 
  # Kan ikke plotte obs. uten koordinater
  filter(!is.na(Nord)) |> 
  filter(!is.na(Ost)) |> 
  st_as_sf(
    coords = c("Ost", "Nord"), 
    remove = TRUE,
    # 25832 er lik 5972 i 2-d, bare høydemodellen er forskjellig
    crs = st_crs(25832)
    ) |> 
  st_transform(5972)
```

```{r}
# Plotter punktene
merged_data_sf |> 
  select(Knr) |> 
  plot(pch = 16)
```

```{r}
#| eval: false
ENOVA_coords <- distinct(merged_data, GateAdresse, .keep_all = TRUE)
```

Hva er hensikten med dette?
Dere gjør bare matching vanskeligere med å sette alt dette sammen i en størrelse "Matrikkel".

Er det lurt å fjerne postadresse.
Postadresse kan kanskje være en mulighet for å matche vanskelige observasjoner.

```{r}
#| eval: false
# ENOVA_coords <- ENOVA_coords %>%
#   unite(col = "Matrikkel", c("Matrikkelnummer", "Snr"), sep = "/", remove = FALSE) %>% 
#   select(-Matrikkelnummer, 
#          -Snr, 
#          -Postnummer, 
#          -Utstedelsesdato, 
#          -TypeRegistrering, 
#          -Fnr)
```

### Rydder vekk fullstendige datasett, for kontroll og unngå å rote.

```{r}
#| eval: false
rm(merged_data)
rm(KoordinaterVestland)
```

## Fjerner snr fra ENOVA_Vestland

Er dette lurt?
Hvis en seksjon i en seksjonert bolig har utført tiltak så vil dere ikke kunne matche denne.

```{r}
# ENOVA_Vestland <- ENOVA_Vestland %>% 
  # select(-Snr)
```

# Koordinater, Bergen

```{r}
#| eval: false
Bergen <- data.frame(
  id = 1,
  lat = 60.3925,
  long = 5.323333
)
```

### Ting å gjøre her:

Finne en ID vi kan bruke til å kombinere med ENOVA_Vestland/ENOVA_coords

**Se ovenfor for hvordan dette kan gjøres, merged_data og merged_data_sf**

**Det største problemet blir å kombinere info. fra EV og Enova. Her har dere for lite info. i EV. Hva skal egentlig dataene i EV brukes til?**

Kan henda me må laga ein eigen ID i Vestland_coords & Bergen datasettet, f.eks.
ein nummerisk ID som me kan utnytta te å slå sammen desse to på?
Finne ut vilken format (CRS/EPSG) vi skal bruke på dette Transponere datasettene

Mutate en felles koordinat (Lengde og bredde) for ENOVA_Vestland Mutate en felles koordinat (Lengde og bredde) for Bergen Bruke st_distance for å finne avstand i luftlinje mellom punktene for å finne distanste mellom sentrum og boliger Sjekke og evt.
konvertere til rett måleformat (km)

# Databehandling - Ambita

Opprinnelig datasett inneholder 284 340 obs.
of 121 variables, så før innlasting er det i Excel fjernet:

-   45 variabler

-   224 996 obs.

**OK, men trolig enklere å gjøre i R**

# Databehandling Ambita AS

```{r}
# Ambita <- read_excel("Ambita.xlsx")
Ambita <- read_excel(here::here("data/Ambita_Delvis.xlsx"))
```

```{r}
# Ambita <- Ambita[Ambita$DokumentAr %in% c(2019, 2020, 2021, 2022), ]
# Ambita <- Ambita |> 
#   # gjør om fra date-time til date. Trenger ikke vite hvilket sekund det
#   # blir Utstedt
#   mutate(
#     Utstedelsesdato = as_date(Utstedelsesdato)
#   )
```

## Tar vekk kolonner som ikke er relevante for oss

### Hovedvariabler som ikke er nødvendige

```{r}
#| eval: false
Ambita <- Ambita %>% 
  select(-InternidDokument,
         -Embetenr,
         -DokumentAr,
         -Dokumentnr,
         -InternidRettsstiftelse,
         -Rettsstiftelsesnr,
         -Rettsstiftelsestypekode,
         -Rettsstiftelsestype,
         -AvgiftsGrunnlag,
         -AvgiftsAarsakkode,
         -AvgiftsAarsak,
         -Omsetningstypekode,
         -Anvendelseskode,
         -Boligtypekode,
         -AndelOmsatt,
         -FormalBoligseksjon,
         -OrganisasjonSomEier,
         -EtablertDato,
         -AdresseEier,
         -AndelTeller,
         -AndelNevner,
         -AndelStatus,
         -EiendomAdressegatenr,
         -Postnr,
         -Poststed,
         -BygningstypeKode,
         -Naeringsgruppekode,
         -Tattibrukdato,
         -Dokumenttypekode,
         -Dokumenttype,
         -InternidEiendom,
         -Festenr,
         -PromSKD,
         -KvmPrisSKD,
         -LigningsverdiSKD,
         -EiendomHoyde,
         -ObjektNivakode,
         -ObjektNiva,
         -AnonymIDEier,
         -PersonIDTypeKodeEier,
         -PersonIDTypeEier,
         -NavnEier,
         -BolignrEier,
         -DSFStatusKodeEier,
         -DSFStatusEier,
         -KjonnEier,
         -AlderEier,
         -InternidAdresse,
         -Bydel,
         -Bydelsnr,
         -Grunnkretsnr,
         -Grunnkrets,
         -AdresseHoyde,
         -InternidBygning,
         -InternIdBruksenhet,
         -Etasjekode,
         -Kjokkentypekode)
```

### Tar vekk variabler, men med mer forsiktighet

```{r}
#| eval: false
Ambita <- Ambita %>% 
  select(-AdresseNordSor,
         -AdresseOstVest,
         -ID_MATRIKKELEN_EIENDOM,
         -ID_MATRIKKELEN_ADRESSE,
         -ID_MATRIKKELEN_BRUKSENHET,
         -ID_MATRIKKELEN_BYGNING)
```

## Endrer kolonne navn

```{r}
#| eval: false
colnames(Ambita)[colnames(Ambita) == "Kommunenr"] <- "Knr"
colnames(Ambita)[colnames(Ambita) == "Gardsnr"] <- "Gnr"
colnames(Ambita)[colnames(Ambita) == "Bruksnr"] <- "Bnr"
colnames(Ambita)[colnames(Ambita) == "Seksjonsnr"] <- "Snr"
colnames(Ambita)[colnames(Ambita) == "Andelsnr"] <- "Andelsnummer"
colnames(Ambita)[colnames(Ambita) == "Bygningsnr"] <- "Bygningsnummer"
```

```{r}
#| eval: false
# Her endrer vi alle Snr og Andelsnummer fra 0 til NA slik at det blir identisk som i ENOVA sitt datasett
Ambita$Snr[Ambita$Snr == 0] <- NA
Ambita$Andelsnummer[Ambita$Andelsnummer == 0] <- NA
```

Er skeptisk til den neste.
Enklere å matche når du har tilgang til knr/gnr/bnr etc. enn Matrikkel.

```{r}
#| eval: false
Ambita <- Ambita %>%
  unite(col = "Matrikkel", c("Knr", "Gnr", "Bnr", "Andelsnummer", "Snr"), sep = "/", remove = FALSE) %>% 
  select(-Knr, -Gnr, -Bnr, -Snr, -Andelsnummer)
```

## Kommentarer rundt matrikkel og matching

Matrikkel (grunnboken) omfatter eierskap til enhver jordeiendom i Norge, så i utgangspunktet skal grunnboken vha.
knr/gnr/bnr angi hvem som eier enhver jordflekk.
Er det en bolig (tenk enebolig) på denne jordflekken er saken enkel.

Imidlertid har man også feste-tomter.
Da angir knr/gnr/bnr eieren av jordflekken, men denne jordflekken er delt opp i tomter som fester har rettigheter til.
Hvis det står et hus på hver festetomt kan huset identifiseres vha.
knr/gnr/bnr/fnr.

En byggning på en jordflekk kan også være delt opp i seksjoner.
Der ulike personer har eierskap til de ulike seksjonene.
For å identifisere seksjonene trenger vi knr/gnr/bnr/snr.
Er en bygning på en festetomt seksjonert trenger vi knr/gnr/bnr/fnr/snr for å identifisere seksjonen.

I borettslag har man gjerne en stor jordflekk eid av borettslaget og så har hver enhet sine andel, f.eks.
en blokkleilighet eller et rekkehus.

Har man tilgang til knr/gnr/bnr/fnr/snr skulle man i prinsippet være istand til å identifsere alle enheter.
Imidlertid har man ofte manglende informasjon, f.eks.
at fnr = NA.
Dette kan angi at det ikke er snakk om en festetomt ELLER at opplysninger om feste mangler.
Da har man et problem.
Tilsvarende for seksjoner og andeler.

Et alternativ for å matche kan da være å bruke et annet system, f.eks.
postadresse.
Har man en postadresse f.eks Bergensbakken 29 C 5520 Bergen kan det være mulig å identifisere et rekkehus i en boligbyggelag i Bergen selv om snr/Andelsnummer mangler.

Slik jeg forstår det er situasjonen:

1.  Dere har et datasett fra ENOVA der det er utført tiltak
2.  Dette vil dere matche med et datasett som angir salgspris og andre karakteristika ved boligen (EV). Problemet er at denne kun har **knr** og **byggeår** (ofte unøyaktig) som korresponderer med ENOVA data. Jeg tror derfor det er nærmest håpløst å få til et datasett basert på kun disse id-ene. Er det mulig å få **gnr/bnr/fnr/snr** eventuelt **Bygningsnummer** for disse dataene. I Ambita har dere imidlertid tilgang til disse størrelsene. Så Ambita dataene skal kunne matches med ENOVA.
3.  Når dere har ENOVA settet med salgspris etc, vil dere matche dette med Koordinater for jordeiendom (ser også ut til å skille på Andelsnummer).

Jeg tror det beste her er å ta det bit for bit.
Start med punkt 1 og 2 og del det opp.
Match først eneboliger identifisert med knr/gnr/bnr.
Ta så eneboliger på festetomt, identifisert med knr/gnr/bnr/fnr og så seksjonerte boliger på tomt identifisert ved knr/gnr/bnr/snr.
For andeler i boligbyggerlag burde knr/gnr/bnr/Andelsnummer gi match.

Får dere riktige koordinater fra Ambita kan det også være en mulighet å matche observasjonene på koordinater.
Har aldri gjort det selv og tror det er langt lettere å gå via knt/gnr/bnr..., hvis ikke koordiatene kommer fra samme kilde slik at en har perfekt match.

## Slår Sammen Ambita og ENOVA_coords

```{r}
#| eval: false
ENOVA_Vestland <- ENOVA_Vestland %>% 
  unite(col = "Matrikkel", c("Matrikkelnummer", "Snr"), sep = "/", remove = FALSE) %>% 
  select(-Matrikkelnummer, -Snr)
```

## Matcher merged_data_sf med Ambita

```{r}
# Lille Ambita
# Ambita <- read_xlsx(here::here('Ambita.xlsx'))
```

Dere bør sjekke om det er variabler i Ambita dere kan klare dere uten (f.eks, bruk select() til å velge de variablene dere trenger).
Blir et lettere datasett å jobbe med.

Lager minimal Ambita, dere får utvide med det dere trenger

```{r}
Ambita_ag <- Ambita |> 
  select(
    Dato = DokumentDato,
    Pris = Kjopesum,
    Knr = Kommunenr,
    Gnr = Gardsnr,
    Bnr = Bruksnr,
    Fnr = Festenr,
    Snr = Seksjonsnr,
    Andelsnummer = Andelsnr,
    brutto_a_bolig = BruttoAREALbolig,
    brutto_a_annet = BruttoAREALannet,
    bruks_a_bolig = BruksAREALbolig,
    bruks_a_annet = BruksAREALannet,
    BRUKSAREALBRUKSENHET,
    ant_rom = ANTALLrom,
    ant_bad = ANTALLbad,
    ant_wc = ANTALLWC,
    ktk = Kjokkentypekode,
    vfk = Vannforsyningskode,
    ak = Avlopskode,
    Omsetningstype,
    bk = Boligtypekode,
    btk = BygningstypeKode,
    e_areal = EiendomAreal,
    gl_vann = GrenselinjeVannkant,
    gl_veg = GrenselinjeVegkant,
    Postnummer = Postnr,
    Poststed,
    GateAdresse = EiendomAdressegatenavn,
    EiendomAdressehusnr,
    EiendomAdressebokstav
  ) |> 
  # Change type of matching variables
  mutate(
    Knr = as.character(Knr),
    Gnr = as.character(Gnr),
    Bnr = as.character(Bnr),
    Fnr = as.character(Fnr),
    Snr = as.character(Snr),
    Andelsnummer = as.character(Andelsnummer)
  )
```

Henter data fra Ambita_ag og legger til merged_data_sf.
Bruker bare knr/gnr/bnr/fnr/snr/Andelsnummer.
De mer innfløkte får dere slite med ;-)

```{r}
# Jeg tar de enkle ;-)
# Dette skal være EN bolig på ETT jordstykke
merged_data_sf_enebolig <- merged_data_sf |> 
  # Antar at NA for Fnr, Snr og Andelsnummer betyr at
  # obs. IKKE er festetomt, seksjonert eller andel i borettslag
  # Hvis NA for disse også betyr at de er festetomt, seksjonert 
  # eller andel i borettslag, men at opplysning om dette magler så 
  # har dere et problem. Kan eventuelt da benytte postadresse.
  filter(is.na(Fnr)) |> 
  filter(is.na(Snr)) |>
  filter(is.na(Andelsnummer)) |>
  left_join(
    y = Ambita_ag,
    by = c("Knr", "Gnr", "Bnr")
  )
```

Hvis dere ser i merged_data_sf_enebolig får vi selv her flere duplikater.
Se f.eks KOLLEVÅGTJØRNA 2 to observasjoner.
For denne er alt likt utenom Andelsnummer.x som er NA og Andelsnummer.y som er hhv.
10 og 11.
Slike duplikater må dere finne, finne ut hvorfor de oppstår og så luke dem ut.
Postadresse kan være et alternativ, men da må variabelen Gateadresse i merged_data_sf splittes i sine enkelte komponenter.

# HER STÅR VI FAST.

**Se ovenfor for tips om hvordan dere bør gå frem.**

Vi skal slå sammen datasettene ENOVA_Vestland med Ambita med hensyn på Matrikkel.

Det vi ønsker er å slå sammen datasettene på matrikkel, og utelukke alle verdier som ikke matcher på matrikkel i disse to datasettene.

Vi har prøvd mye rundt funksjonene - inner_join - merge - left_join

Vi kommer oss ikke videre herifra.
Vi har også prøvd å slå sammen på bolignummer, men får at det er to ulike kolonnetyper, hvor den ene er double og den andre er characters.

```{r}
#| eval: false
Tmp <- merge(Ambita, ENOVA_Vestland, by = "Matrikkel", all.x = TRUE, all.y = TRUE)
```

```{r}
#| eval: false
Tmp2 <- distinct(Tmp, Bygningsnummer.x)
```

```{r}
#| eval: false
unique(Tmp2)
```

.keep_all = TRUE

```{r}
#| eval: false
Test <- Ambita %>% 
  left_join(ENOVA_Vestland,
            by = c("Matrikkel" = "Matrikkel")
            )
```

```{r}
#| eval: false
duplikat <- Test[duplicated(Test$Matrikkel),]
print(duplikat)
```

```{r}
#| eval: false
distinct(Test)
```

```{r}
#| eval: false
Sammen <- merge(ENOVA_Vestland, Ambita, by = "Bygningsnummer")
```

```{r}
#| eval: false
Datasett <- distinct(Sammen, GateAdresse, .keep_all = TRUE)
```

Jeg vil foreslå å splitte Matrikkel opp i knr (kommune nummer), gnr (gårdsnummer), bnr (bruksnummer), snr (seksjonsnummer) og fnr (festenummer).
For de to siste er jeg usikker på rekkefølgen, men dere har kansje dokumentasjon på Matrikkelnummeret.
Hvis jeg har gjettet feil må dere bytte om på snr og fnr.

```{r}
#| eval: false
# starter med ENOVA_vestland
# fikk feilmelding fra separate_wider_delim() om at det var 3 obs. med mer
# 5 verdier. Derfor too_many = "debug"
tmp <- ENOVA_Vestland |> 
  # ny funksjon erstatter separate()
  separate_wider_delim(
    cols = Matrikkel,
    delim = "/",
    names = c("knr", "gnr", "bnr", "snr", "fnr"),
    too_many = "debug"
  )
```

Finner de 3

```{r}
#| eval: false
tmp |> filter(Matrikkel_ok == FALSE) |> select(c(gnr:bnr), Matrikkel) 
```

Ser at disse tre har seks verdier, der den siste er NA for alle tre.
Antar at denne NA verdien er feil.
Kan enten droppe de tre obs.
eller rette.
Retter ved å legge de tre ut i tmp1.
Redigerer så Matrikkel for de tre (fjerner /NA).

```{r}
#| eval: false
tmp1 <- ENOVA_Vestland |> filter(Matrikkel %in% c("4601/97/93/110/12/NA", "4601/160/797/30/492/NA", "4601/24/10/039/006/NA"))
# not 6 parts
tmp2 <- ENOVA_Vestland |> filter(!Matrikkel %in% c("4601/97/93/110/12/NA", "4601/160/797/30/492/NA", "4601/24/10/039/006/NA"))
```

```{r}
#| eval: false
tmp1[,1:3]
```

```{r}
#| eval: false
tmp1[1, "Matrikkel"] <- "4601/97/93/110/12"
tmp1[2, "Matrikkel"] <- "4601/160/797/30/492"
tmp1[3, "Matrikkel"] <- "4601/24/10/039/006"
```

Oppdatert ENOVA_Vestland

```{r}
#| eval: false
ENOVA_Vestland <- bind_rows(tmp1, tmp2)
```

```{r}
#| eval: false
# rydder
rm(tmp, tmp1, tmp2)
```

```{r}
#| eval: false
# splitter Matrikkel
ENOVA_Vestland <- ENOVA_Vestland |> 
  # ny funksjon erstatter separate()
  separate_wider_delim(
    cols = Matrikkel,
    delim = "/",
    names = c("knr", "gnr", "bnr", "snr", "fnr")
  )
```

```{r}
#| eval: false
# splitter Matrikkel i Ambita
Ambita <- Ambita |> 
  # ny funksjon erstatter separate()
  separate_wider_delim(
    cols = Matrikkel,
    delim = "/",
    names = c("knr", "gnr", "bnr", "snr", "fnr")
  )
```

Ser at ENOVA_Vestland har en variabel Utstedelsesdato som har noe å gjøre med når et tiltak er gjennomført.
Ser tilsvarende at Ambita har en DokumentDato variabel som jeg antar er datoen eierskifte blir tinglyst og at Kjøpesum er salgssummen relatert til dette eierskifte.
Vil anta at en del av boligene kan være solgt på flere tidspunkt.
D avil det være slik at når en slår sammen de to datasettene vil en kunne få flere observasjoner fordi samme bolig i ENOVA_Vestland har blitt tingslyst flere ganger.
Dere vil antakelig kunne bruke dataovariablene der en har multiple salg til å finne verdi før og etter at ENOVA tiltak er gjennoført.

```{r}
#| eval: false
# Endrer Ambita variabelen Bygningsnummer fra numeric til character
# nødvendig for join nedenfor
Ambita$Bygningsnummer <- as.character(Ambita$Bygningsnummer)
```

```{r}
#| eval: false
EnAmb <- ENOVA_Vestland |> 
  left_join(
    y = Ambita,
    by = c("Bygningsnummer", "knr", "gnr", "bnr")
  )
```

Ser at EnAmb har 13884 observasjoner (mot 3067 i ENOVA_Vestland).
Noe av veksten i antall obs.
kan skyldes multiple salg, noe kan skyldes at objektene ikke er entydig definert vha.
Bygningsnummer, knr, gnr, bnr.
Typisk problem med boligblokker, borettslag og seksjonerte eiendommer.
Dere har postaddresse både i ENOVA_Vestland og Ambita.
I Ambita er postadressen splittet i varaiablene EiendomAdressegatenavn, EiendomAdressehusnr og EiendomAdressebokstav.
I ENOVA_Vestland er dette kombinert i variabelen GateAdresse.
Dere kan prøve å splitte også denne opp i variablene EiendomAdressegatenavn, EiendomAdressehusnr og EiendomAdressebokstav.
Da vil dere få anledning til også å matche på adresse.
Dere må nok bruke regexp (se r4ds.had.co.nz cap. 14 særlig 14.3) og også andre funksjoner fra str\_ for å få alt på samme form (bruk av hhv. stor og liten bokstav).
Dette er en kjekk liten utfordring ;-)

Her er en start.

```{r}
#| eval: false
# Fikser først GateAdresse, noen uten mellomrom mellom navn og nummer
tmp <- ENOVA_Vestland$GateAdresse |> 
      str_match(
        pattern = "^([^\\d]*)(\\d+)\\s*\\w?"
        )

ENOVA_Vestland$GateAdresse <- paste(tmp[,2], tmp[,3])
rm(tmp)
```

```{r}
#| eval: false
ENOVA_Vestland <- ENOVA_Vestland |> 
  mutate(
    EiendomAdressegatenavn =  str_extract(
      GateAdresse,
      pattern = "(.+)\\s+(\\d+)\\s?(\\w?)$",
      group = 1
    ),
    EiendomAdressehusnr =  str_extract(
      GateAdresse,
      pattern = "(.+)\\s+(\\d+)\\s?(\\w?)$",
      group = 2
    ),
    EiendomAdressebokstav =  str_extract(
      GateAdresse,
      pattern = "(.+)\\s+(\\d+)\\s?(\\w?)$",
      group = 3
    ),
    .after = GateAdresse
  )
```

Kanskje en idé å downcase EiendomAdressegatenavn i både ENOVA_Vestland og Ambita og også å bruke str_replace() for å bytte ut mellomrom med \_ for letter å se mellomrom tegn som er lagt inn.

```{r}

```

Nå kan dere kanskje også matche på adresse.

```{r}
# siste
```
